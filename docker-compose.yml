version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  db:
    image: postgres:13
    hostname: db
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: market_data
    volumes:
      - ./infra/database/schema.sql:/docker-entrypoint-initdb.d/init.sql
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d market_data"]
      interval: 5s
      timeout: 5s
      retries: 5

  market-data-api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: market_data
    hostname: market-data-api
    container_name: market-data-api
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_CONNECTION: "host=db user=user password=password dbname=market_data port=5432 sslmode=disable"
      KAFKA_BROKER: "kafka:29092" # Internal Kafka address
      ALPHA_VANTAGE_API_KEY: "${ALPHA_VANTAGE_API_KEY}"

  market-data-poller:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: poller
    hostname: market-data-poller
    container_name: market-data-poller
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      DB_CONNECTION: "host=db user=user password=password dbname=market_data port=5432 sslmode=disable"
      KAFKA_BROKER: "kafka:29092" # Internal Kafka address
      ALPHA_VANTAGE_API_KEY: "${ALPHA_VANTAGE_API_KEY}"

  market-data-processor:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: processor
    hostname: market-data-processor
    container_name: market-data-processor
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      DB_CONNECTION: "host=db user=user password=password dbname=market_data port=5432 sslmode=disable"
      KAFKA_BROKER: "kafka:29092" # Internal Kafka address

volumes:
  db_data:
